package bnbtypes

import (
	"encoding/json"
	"math/big"
	"reflect"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

func TestHeaderJsonUnmarshal(t *testing.T) {
	headerDataStr := `{"withdrawalsRoot":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","withdrawals":[],"hash":"0xe49204484c824ebcb9ae576822c895fdca38cd9e8280c224b3465ab9cb6b1de9","parentHash":"0xb4ee6b4f15cbd2569bbe00d3aba3a4a1da6c69da35b779385e75b1244bff08ce","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","miner":"0xf8de5e61322302b2c6e0a525cc842f10332811bf","stateRoot":"0x92615b02089eec46b944725e9fd26ed9f3c528b0869b3fd7739a8b20dbc8597c","transactionsRoot":"0x382cd7a13522dbd94028879d047756fe4a99e92986ee82df2838a241bd1e9edf","receiptsRoot":"0x23e317d1a7b4655c785de51f8da022ca3dfb824a48de57558b75532b958d6766","logsBloom":"0x8f38e2522c4ca538d03a24e5833c386b0cc8d44f8d543993438b30dd02146788b70c55ba208ab589cb29822e00745963cb6368b7c30a0818deec00b20666eee664a2af059d364a43250ce5dd87b26121e9b70c01c5495ac245059971a6ceed97cb5a08fa8203a052d6e1ea7d9405c80baa189cfec36f760fa2884a19e2ca0292688e38c30119e483cad07b88090461c919378c94e7a011ed21d0885396baa0fb0a088b4234c96b207b0467f52211740c17abac8c116828ad3a9e1da4d7096244693083ee1346640749898db0fe6b9d422fc0b38c036323b7c310598633b5f03f0892b83b247d5a7231702e148ad083225e0d8c935095d74c60031993b6886f12","difficulty":"0x2","number":"0x26dbc53","gasLimit":"0x85832a7","gasUsed":"0x9e169d","timestamp":"0x66a0a498","extraData":"0xd88301040a846765746888676f312e32312e35856c696e757800000048fa7b05f8b5831fffffb860a8786fd9ba0efa7d285e042a739a4033abb2d9be4c43ff901d6b3220ea8565685ba94a8ee7a321327fc3ce61f1b5fbbe1554d80dcabfe26a889ed9f218e65235b98effbabb71997a0514e244dac8c6d94d962d8c0cd2e5b82bb63d83d145f2bef84c84026dbc51a02be097bc11ecbe92622b311755cddc70ac60a32e377cdaff57630f7e95a101a184026dbc52a0b4ee6b4f15cbd2569bbe00d3aba3a4a1da6c69da35b779385e75b1244bff08ce80e67088fd0015819d8bdefbb14f53dbd7b0f701de1b080a44287187a5d77442a009cb3cb2965cef56b149e3ff63ba72188232b0bc65b857ed7e6140cce99029a201","mixHash":"0x0000000000000000000000000000000000000000000000000000000000000000","nonce":"0x0000000000000000","size":"0x7eb9","totalDifficulty":"0x4d317bd","baseFeePerGas":"0x0","transactions":["0xd0fcf7c6d6865bfadd917ea4372f764b8fb4ed65ba75eb80aa36f7b5d4d70409","0x73243c804829bdb34e1826790c4e32b7c9694c47b813e5eaaba0437f5058c5ae","0xe58e175b84b6afebd411553e058cc43d339bd9800e47deb83ac510315e6190b3","0x56168aa94702f788f13fc87d1decf174b9d3234618e09662430223c3f591c61c","0xb21e81f6ea3a6549b5c229eed9df27eb639014563b9a54cc9256ddd64b9caa5b","0xdb8313fb0c7e337fc2718dafbcdf930f13648fc1d426cd8008dca2de068f3179","0x2108f6c2fd44439e4a0866b95fae37bee4c7662a267d8933add880b87ca69fb2","0x7084cee96f62af121dea9d522b1a5a88704b53aa7809da68d77e8c7e2db83d2a","0xcfcd262ab4255f45d2881e004f638046c5e916ccf396be5db3378c1c27467c2b","0xd4c77fd732c82e4ad60455ee775da7a7b74decba58e945778a181a75a4f28782","0xf92d8f20295463687db03e2e4aedfea70c21c1a5cec1c04a41eb9f75d5664232","0xbecb7f0298fde5f2b0e29f4312f1501ccb89efc02176f4c83283c6074237dda0","0xfede59582730a8d9c0a159c93607e1c91a0533126090c60c6fdea1aa60d1659a","0x406bedc02562f3d078c80237466abc23997675454c2103527c40ed03975c5b90","0x1bce989e7e9edc46f3643d0235d301dd4ca07a259091fa1b962af8150ec23c69","0x959ac8bdee7e16f81b6130927a4192864be574a175896ac1376b7b4b66ee347d","0x140322dd6ea5be0468de78cabcaf64a26e93c401162c8a62013c18c4f16b195f","0xd4dd10e9d9ad2e67c1600f2112a91d5985feebaf8dc79a4a2d2ae872c0dc1de5","0x679c9914cc99c50184d5975d82db889f2e8c6a5b78df4bf446fb52382c365dee","0x33f79eab905c28fc7260bc86328e01ffb6c049beca3c1699819b464646ec6812","0xb54f26f7c585979211fef7a97de9e657e8ab783c3fece5b489a44cbc18bbbc76","0x8bdcd4137295e21ad31689ab05fa23faa93b802a7ca88ca2fca0759754e23296","0xf5f0ead5fcd4553535bddd85600a2bf7fbeee8bdfe9d73dc0abda0b66b527481","0x54d7b221dd27584098828ad2d656cba3db23e8a4b89efef1b5417f9ecfa6e851","0xbb8837f2da82217562900b5bdbb8d67d0302386953b23562273414607a90aed3","0x1e6c46c39eb070d73e8b6400acee81d5b9542ef4609b2d5184c01e0c896d82ea","0xb6115efbc6de354588fdc36d283cb9b0fd00bcb0724bd675b3ecccc2b26a71a5","0xcfd6d630d68751d30ef554bd35a5113ff96d0207411dfdf32dd9b99680e51ce7","0x9936cf0a6dfd5ab077a9ea3c1812ff79ed39922d3b2572b489b42e43242a2c7a","0xb3f7e4025f91147e9946f318ac08d4d236bfbaaf7da06df0c68158af7ebf7444","0x2ade4d4ccb3e33a620cead80e747360f897f7d2ae51d86fbdf6108ad439fd698","0x2028482a80b2e3cc1531e73b5d761ec2c900731ff2142cf197f22a83a1d6c09a","0x73af09a864376ada2f4786ff4915c0f6f12801de17f0d63f38b9da41611d4b20","0xea4738375c9e81cbb60776539aae70a20117f8339be52154603b866c903c04f3","0x957bd260baa35bf27ea89d3784304acbbba809ad13ed1219ae3f52a520603ed0","0x6478c3940d0d5872f16df8db0e6325035484f1f2217796275b8bc2fe22ca4713","0xe3cdb3b4ae3847509a4ca85bb80efeafdfce24d4fe0c3f88a36d1727f0435f31","0x76164273ee9d4f78fbf16f9e537a72deaec629810a551129e4ee5a1825fcfd56","0xafe35c9f17c0b21d654ef04a240a1b27b2dbc13f2732079514fecf40f7b2caec","0x612dcc56de34a820712f425ea2b5e8a7ccecdbb6bac96ccbd0631f69f343b732","0x4bb1dda978dc3ac9649f8c96e071324e1b8fde5ee4c7f251f124330a170b8981","0x300769f94ea6c40d5d5487a45a4374515d4ca7baf7050b1e69328940b82ebf27","0x73a173af0cf7077514d760d20a0fd22cc220a184c987cd5fe3fc4c00e00bf61b","0x1979483269bfeb39065e76da151cc9795ebdfa16d23c8ce97b21447860e12703","0xa15e5eff263d11f6c713202be481a72b8baf3e7c1fdd9f1e9e98190b31de39a4","0xb4a291d1fbe3a38e684b857d0290abb1f79499e56861a897bc0d08fb24ae2736","0xdc7614979d248cb1575d629a96b6a895bbcff5d5e3200892ce9435af82848670","0xd0574b743df9f2e62b714e1d9a2e1f7fd0664d730bd87e4573a750c2b1b361b9","0x28ff7e552c71117dc3058b6ea02fcb8effa47ca3b528cab8548695aaa990d22b","0x1a2d22731e191a2f12ecaa52bf66e7ea8c6e618f2556a2b7fe515ec7d6ae22bb","0x81fdafd1667abda46427e4a5d7a5dab56317a8530fb0bcfcaac80520e8892b83","0x04883ceb39fb9a6cfd82b4973172c5c9b0896eb99f5c43a39915dc4921286848","0x67dc1416953773d8538141b591f87d546f3973dc872b8d111a055b43038d4a65","0x946ea79a01e6b10645d30a46443facc529f8bbb619b1ba7eb0ba6aff0670dad9","0x59eb674bde653d1f9aa564dee0636355cd70ea1e64d8fb6d50f47e28780374e6","0x357333fb30000237cec38d7c668fb724d7451cf292b8d95945eda034d5779942","0xa026f8ab8abee7b9070da34d718073dfcaa57980ee6d5245a9bf0a0cacfefcf0","0x52c531efb93c624c18a6195851b4b6e83193d422637d5f6464ace70a8c94ab42","0x72defd1ed31644e65c33745944d0f958d9e2e9d6fe88e046b62eee59bbd6faaf","0xb06808b8cc829633c4cc0883188e0169ec07b02abd02bd54ed8c948a9d490dd0","0xda79fb3595ed65201870984941a2c21e65dd9467354f555cc72c9c0e2156a922","0xaf6c1d0da1e87a41936484d193d07f065e29fc2ca2f9367cb6789307fc4d4cb6","0x3bbbeef7a4b25b0d8c44ab581194102ae60c8751e28e06a07c52f27fb4770184","0x5ca5586a98670f07d13545cf8ff47e6a4232c4567494ff80c0b2298de7d70016","0xa1422f8117fd3c0a274b7cee14751ca51b3f4f6ef0a3ce0f1b51057ff5a1a360","0x82fa90baf085a3fdaa82233aaac6cf776cdeade5bae1069ac54b618636b73c8b","0x09be859b25f96abea72942aaf7dadce6b348aac4779c865e5184c0ec54df4d93","0xd8798067bc4823080752d9981daa4bc869a69c33ea969000997a0caa5ab52d06","0x08906565fd2adae052eee188431a9dcabf2ed593b8460a0e490f4d97422713c8","0xff0c285327a7acc74b5e54d6e061a817465ca6c06e2691aff829082c8f83b9d8","0xd193d36e09ff4e88371f95f248199d74fe92d084ecd47af2cfbda0f0770f17ec","0x6ce7cf453fcab1641514ea25272095fa7cfdcc4fcbef1849e5fbb92de0b3b181","0x1eca217e62a1072b01be0a139637a1d1efc693f55fdc9087e3abb4e1217d59f9","0x343d051e27d47b9d1e9c62d2129daf4455af23a6045935f71d74266da66ae265","0x7982b1302452979bf77238657e5de363a1205c7349eb17e76aa5a9d5d5748aa0","0xf93148fd298e485f091b234cc962bce49b0e8237a551d13d9991b4573b7092d9","0xf97d1f8473730ec36225a967becbfa39e0ea6dbceafa20540a4181d143076906","0xe67d4e772db4aeec3e11fa1e44aa73cf77ab79167ea11693ba6b929991f5de46","0xbfd613ab4407f40eb2bd2431a3d4ad4af6d268d2a8200074f8af4a432e48d831","0x369d8a633aa8f6a70f4b41bc15d8820084a4931972b0d2448a2352960d76eec4","0x822ba966388e3c54ce310e1c9a2717279bd4c117deb45588481ffa81b4e4a434","0x5b14448ecaff8d9c4c2132b768329127ba3d847657472f1c1552e904f7b562b1","0x0845cc4b80ead6b64c042b8177e30d1235de31df065ca5562f3a19a797a26eab","0x7304ba90c9133375b3fb7beef6cb5b428200ac904bf5251d0ef1e7e117cef2d9","0x7d5b084f313604bc310a70200621614b1b85f48e5824c2548041e8cf25ed0d78","0x98dad3ade375367b818a37e87e80a1981dcda47ae02a74547f180fae00a30a55","0xaef66cf738cb90da0e6e39cfe057fe6bf03c2bdbb4adba27b00f8282fff610fb","0x6f0998253df2c1476cbc7d7b4500dcba2ce16db806aa31de2e0ed684b64314aa","0x7d8da8524cac60e7153913fbf3c80b63f5ba51b9d544debc5d1436caab56f5fe","0x21cd4d652c67c241bfce32e1db6e8da6831443b29d0b86ff1c8d6788635af496","0xed4739507733ab7c60d10531f37cbcb26e57e5057c729839e2700b03c66087c2","0x9456c3eba6a14ec7eba26b1077a7289cb208edb8985bad2f68622a7083970da2","0x3997ae8cd8b7f6121a4190fca34877509fb6cf3de9ff3dbea5253ef8e17490f2","0xdc95e128379856e8a395fb0a7a5f9375936411442bfb0c601ee1348db34b4894","0x21788929f22a93e00c8dfb2afb4cbee4576748a2b9f71b53f529bab268c9b17f","0x1a166dcc2f49a2a9b1b2c35faa8fef11fec3f218434e2658a82717e08a43f0e6","0x6ee4446b93d6c7e104873e0acb924fb87d5738be2c4fbcc5f52a4f9d59dd76fb"],"uncles":[],"blobGasUsed":"0x0","excessBlobGas":"0x0"}`
	var header *Header
	if err := json.Unmarshal([]byte(headerDataStr), &header); err != nil {
		t.Fatal(err)
	}

	check := func(f string, got, want interface{}) {
		if !reflect.DeepEqual(got, want) {
			t.Errorf("%s mismatch: got %v, want %v", f, got, want)
		}
	}
	check("WithdrawalsRoot", *header.WithdrawalsHash, common.HexToHash("0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"))
	check("Hash", header.Hash(), common.HexToHash("0xe49204484c824ebcb9ae576822c895fdca38cd9e8280c224b3465ab9cb6b1de9"))
	check("ParentHash", header.ParentHash, common.HexToHash("0xb4ee6b4f15cbd2569bbe00d3aba3a4a1da6c69da35b779385e75b1244bff08ce"))
	check("UncleHash", header.UncleHash, common.HexToHash("0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"))
	check("Miner", header.Coinbase, common.HexToAddress("0xf8de5e61322302b2c6e0a525cc842f10332811bf"))
	check("StateRoot", header.Root, common.HexToHash("0x92615b02089eec46b944725e9fd26ed9f3c528b0869b3fd7739a8b20dbc8597c"))
	check("TransactionRoot", header.TxHash, common.HexToHash("0x382cd7a13522dbd94028879d047756fe4a99e92986ee82df2838a241bd1e9edf"))
	check("ReceiptRoot", header.ReceiptHash, common.HexToHash("0x23e317d1a7b4655c785de51f8da022ca3dfb824a48de57558b75532b958d6766"))
	expectBloomHex := "8f38e2522c4ca538d03a24e5833c386b0cc8d44f8d543993438b30dd02146788b70c55ba208ab589cb29822e00745963cb6368b7c30a0818deec00b20666eee664a2af059d364a43250ce5dd87b26121e9b70c01c5495ac245059971a6ceed97cb5a08fa8203a052d6e1ea7d9405c80baa189cfec36f760fa2884a19e2ca0292688e38c30119e483cad07b88090461c919378c94e7a011ed21d0885396baa0fb0a088b4234c96b207b0467f52211740c17abac8c116828ad3a9e1da4d7096244693083ee1346640749898db0fe6b9d422fc0b38c036323b7c310598633b5f03f0892b83b247d5a7231702e148ad083225e0d8c935095d74c60031993b6886f12"
	check("Bloom", header.Bloom, types.BytesToBloom(common.Hex2Bytes(expectBloomHex)))
	check("Difficulty", header.Difficulty, big.NewInt(2))
	check("Number", header.Number, big.NewInt(0x26dbc53))
	check("GasLimit", header.GasLimit, uint64(0x85832a7))
	check("GasUsed", header.GasUsed, uint64(0x9e169d))
	check("Time", header.Time, uint64(0x66a0a498))

	expectedExtraDataHex := "d88301040a846765746888676f312e32312e35856c696e757800000048fa7b05f8b5831fffffb860a8786fd9ba0efa7d285e042a739a4033abb2d9be4c43ff901d6b3220ea8565685ba94a8ee7a321327fc3ce61f1b5fbbe1554d80dcabfe26a889ed9f218e65235b98effbabb71997a0514e244dac8c6d94d962d8c0cd2e5b82bb63d83d145f2bef84c84026dbc51a02be097bc11ecbe92622b311755cddc70ac60a32e377cdaff57630f7e95a101a184026dbc52a0b4ee6b4f15cbd2569bbe00d3aba3a4a1da6c69da35b779385e75b1244bff08ce80e67088fd0015819d8bdefbb14f53dbd7b0f701de1b080a44287187a5d77442a009cb3cb2965cef56b149e3ff63ba72188232b0bc65b857ed7e6140cce99029a201"
	check("ExtraData", header.Extra, common.Hex2Bytes(expectedExtraDataHex))
	check("MixDigest", header.MixDigest, common.Hash{})
	check("Nonce", header.Nonce, types.BlockNonce{})
	check("BaseFee", new(big.Int).Set(header.BaseFee), new(big.Int).SetUint64(0))
	check("BlobGasUsed", header.BlobGasUsed, new(uint64))
	check("ExcessBlobGas", header.ExcessBlobGas, new(uint64))
}
